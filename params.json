{"name":"Python-keystats","tagline":"A Python program to parse unstructured Data to Structured Data using Pandas, Matplotlib for data insights","body":"import pandas as pd\r\nimport os\r\nimport time\r\nfrom datetime import datetime\r\nimport matplotlib.pyplot as plt\r\n\r\npath=\"/home/ubu/Downloads/intraQuarter\"\r\ndef Key_Stats(xlist,ylist):\r\n    #xlist=[]\r\n    statspath=path+'/_KeyStats'\r\n    df = pd.DataFrame(columns=[\r\n                               #'TotalDebtEquity_hdr',\r\n                               'Revenue_hdr',\r\n                               'RevenuePerShare_hdr'\r\n                               #'GrossProfit_hdr',\r\n                               #'NYSEShare_hdr'\r\n                               ])\r\n    stock_list=[x[0] for x in os.walk(statspath)]\r\n    #print(stock_list)\r\n    for each_dir in stock_list[1:]:\r\n        if (each_dir == statspath + '/a'):\r\n            #print (each_dir)\r\n            each_file = os.listdir(each_dir)\r\n            #print(each_file)\r\n            #xlist=[]\r\n            #ylist=[]\r\n            for file in each_file:\r\n                \r\n                #print(file)\r\n                #try:\r\n                    date_stamp = datetime.strptime(file, '%Y%m%d%H%M%S.html')\r\n                    unix_time = time.mktime(date_stamp.timetuple())\r\n                    full_file_path=each_dir +'/'+file\r\n                    #print(full_file_path)\r\n                    source=open(full_file_path, 'r').read()\r\n                    #TotalDebtEquity=source.split('Total Debt/Equity (mrq):</td><td class=\"yfnc_tabledata1\">')[1].split('</td>')[0]\r\n                    #print(TotalDebtEquity)\r\n                    Revenue=source.split('Revenue (ttm):</td><td class=\"yfnc_tabledata1\">')[1].split('</td>')[0].split('B')[0]   \r\n                    RevenuePerShare=source.split('Revenue Per Share (ttm):</td><td class=\"yfnc_tabledata1\">')[1].split('</td>')[0]\r\n                    \r\n                    xlist.append(Revenue)\r\n                    ylist.append(RevenuePerShare)\r\n                    #print (xlist)\r\n                    \r\n                    #GrossProfit=source.split('Gross Profit (ttm):</td><td class=\"yfnc_tabledata1\">')[1].split('</td>')[0].split('B')[0]\r\n                    #Gross Profit (ttm)&sup2;:</td><td class=\"yfnc_tabledata1\"\r\n                    #GrossProfit=source.split('Gross Profit (ttm)&sup2;:</td><td class=\"yfnc_tabledata1\">')[1].split('</td>')[0].split('B')[0]    \r\n                    #print(GrossProfit)\r\n                    #NYSEShare=source.split('<span class=\"time_rtq_ticker\"><span id=\"yfs_l84_abbv\">')[1].split('</span>')[0]\r\n                    #print(NYSEShare)\r\n                    #X_revenue.extend(Revenue)\r\n                    #xaxis=([1,2,3,])\r\n                    \r\n                    df=df.append({\r\n                            #'TotalDebtEquity_hdr':TotalDebtEquity,\r\n                            'Revenue_hdr':Revenue,\r\n                            'RevenuePerShare_hdr':RevenuePerShare\r\n                             # 'GrossProfit_hdr':GrossProfit,\r\n                             #'NYSEShare_hdr':NYSEShare,\r\n                             },\r\n                             ignore_index=True)\r\n                    df.to_csv('keystats.csv')\r\n            return (xlist,ylist)\r\n            \r\n                    \r\n                #except Exception as e:\r\n                    #pass\r\n        \r\n        \r\n                \r\n\r\n\r\nx=[]\r\ny=[]\r\nxlist,ylist = Key_Stats(x,y)\r\n##print(xlist,ylist)\r\n#plt.plot(xlist,ylist)\r\n#plt.bar(xlist,ylist)\r\nplt.scatter(xlist,ylist, label='skitscat', color='k', s=25, marker=\"o\")\r\nplt.xlabel('Revenue')\r\nplt.ylabel('Revenue Per Share')\r\nplt.title(\"Rvene Vs Revenue Per Share\")\r\nplt.legend()\r\nplt.show()\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}